{"version":3,"file":"static/js/136.cb4f2518.chunk.js","mappings":"6KAkBA,IAfiB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaJ,GAAhD,SACGC,KAFWD,EADN,KASjB,C,mICdYK,EAAYC,EAAAA,EAAAA,GAAH,kEAITC,EAAYD,EAAAA,EAAAA,GAAH,2VAwBTE,EAAeF,EAAAA,EAAAA,GAAH,4M,2JC5BZG,EAAcH,EAAAA,EAAAA,MAAH,8LAWXI,EAAeJ,EAAAA,EAAAA,OAAH,iW,SCmBzB,EA7BmB,SAAC,GAAyB,IAAvBK,EAAsB,EAAtBA,gBACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEFN,EAAgB,CAAEE,MAAAA,GACnB,EAOC,WACE,SAACJ,EAAD,CACES,KAAK,OACLC,YAAY,aACZC,WAAS,EACTC,MAAOR,EACPS,SAXqB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACtCP,EAASO,EACV,KAWG,SAACX,EAAD,CAAcQ,KAAK,SAASM,UAAWX,EAAvC,sBAKL,E,SCID,EA3Be,WACb,OAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAe6B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBhB,EAArB,KAiBA,OAfAiB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeF,EAAaG,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAiB,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBH,GAFrB,OAEhBI,EAFgB,OAGtBR,EAAUQ,GAHY,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAQvBJ,GAVyB,CAW1B,GAAE,CAACJ,KAGF,iCACE,SAAC,EAAD,CAAYhB,gBAAiBA,IAC5Bf,EAAOwC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAUzC,OAAQA,MAG7C,C,+LC9BD0C,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBV,EAAe,mCAAG,WAAMnB,GAAN,yFACNyB,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoB1B,EADpB,+CADM,uBACrB4B,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACOL,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKK,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["components/FilmList/FilmList.jsx","components/FilmList/FilmList.styled.js","components/SearchFilm/SearchFilm.styled.js","components/SearchFilm/SearchFilm.jsx","pages/Movies/Movies.jsx","servises/api.js"],"sourcesContent":["import { useLocation, Link } from 'react-router-dom';\nimport { ListFilms, ItemFilms } from './FilmList.styled.js';\n\nconst FilmList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListFilms>\n      {movies.map(({ id, original_title }) => (\n        <ItemFilms key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </ItemFilms>\n      ))}\n    </ListFilms>\n  );\n};\n\nexport default FilmList;","import styled from '@emotion/styled';\n\nexport const ListFilms = styled.ul`\n  margin-top: 12px;\n  list-style: none;\n`;\nexport const ItemFilms = styled.li`\n  font-weight: 400;\n  font-size: 14px;\n\n  background-color: #5F9EA0;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  a:hover,\n  a:focus {\n    background-color: #ff8533;\n    color: #111111;\n    border-radius: 14px;\n  }\n\n  a {\n    display: block;\n    padding: 16px 16px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n   color: #304e50;\n   font-family: Cursive;\n  \n`;","import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n   border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n  border: 1px solid #304e50;\n  border-radius: 4px;\n\n`;\n\nexport const ButtonSearch = styled.button`\n  background-color: #9fc4c6;\n  border: 1px solid #304e50;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  font-family: Cursive;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #ff8533;\n    color: #ffffff;\n  }\n`;","import { useState } from 'react';\nimport { InputSearch, ButtonSearch } from './SearchFilm.styled.js';\n\nconst SearchFilm = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputSearch\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <ButtonSearch type=\"submit\" disabled={!query}>\n        Search\n      </ButtonSearch>\n    </form>\n  );\n};\n\nexport default SearchFilm;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../../servises/api.js';\n\nimport SearchFilm from '../../components/SearchFilm/SearchFilm.jsx';\nimport FilmList from '../../components/FilmList/FilmList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchFilm setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c609255ffcb20c3303eb6de86439bdeb';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};"],"names":["movies","location","useLocation","map","id","original_title","state","from","to","ListFilms","styled","ItemFilms","SectionTitle","InputSearch","ButtonSearch","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","useSearchParams","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","getMovieByQuery","movieByQuery","console","log","length","FilmList","axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}