{"version":3,"file":"static/js/364.38c6b7fe.chunk.js","mappings":"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","sources":["pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink} from 'react-router-dom';\n\n\nexport const NavItemLink = styled(Link)`\n display: inline-block;\n  font-size: 12px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out;\n  color: #000000;\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  &:hover,\n  &:focus {\n    color: #ff8533;\n    text-decoration: underline;\n  }\n  `;\n  export const NavLinkItem = styled(NavLink)`\n display: inline-block;\n  font-size: 20px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out;\n  color: #000000;\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  &:hover,\n  &:focus {\n    color: #ff8533;\n    text-decoration: underline;\n  }\n  `;\n\nexport const GoBackLink = styled.span`\n  a {\n    position: relative;\n    padding-left: 12px;\n  }\n\n  a::before {\n    content: '';\n    display: block;\n\n    border-color: #ff8533;\n    border-style: solid;\n    border-width: 0 0 2px 2px;\n    height: 6px;\n    left: 0;\n    position: absolute;\n    width: 6px;\n    margin-top: -4px;\n    top: 50%;\n\n    transform: rotate(45deg);\n    -webkit-transform: rotate(45deg);\n  }\n\n  span {\n    color: #ff8533;\n  }\n\n  :hover,\n  :focus {\n    color: #ff8533;\n    a::before {\n      border-color: white;\n    }\n    span {\n      color: white;\n    }\n  }\n`;\n\nexport const FilmWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n\nexport const FilmImg = styled.img`\n  max-width: 182px;\n  background: #424242;\n  border-radius: 15px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 26px;\n  margin-bottom: 12px;\n`;\n\nexport const FilmSubTitle = styled.h3`\n  font-size: 16px;\n  margin-bottom: 6px;\n`;\n\nexport const FilmDescr = styled.p`\n  font-size: 16px;\n  color: #888888;\n  margin-bottom: 12px;\n`;\n\nexport const StyledListDescr = styled.ul`\n  font-size: 16px;\n  display: flex;\n  gap: 18px;\n  padding: 0;\n\n  border-radius: 20px;\n  color: #888888;\n  margin-bottom: 12px;\n  list-style: none;\n`;\nexport const StyledList = styled.ul`\n  display: flex;\n  gap: 18px;\n  padding: 14px;\n\n  border-radius: 20px;\n  list-style: none;\n`;\nexport const ListItem = styled.li`\n  span {\n    color: #ff8533;\n  }\n\n  a:hover,\n  a:focus,\n  a:active {\n    color: #ff8533;\n    span {\n      color: white;\n    }\n  }\n`;","import { Suspense, useEffect, useState } from 'react';\nimport {\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieById } from '../../servises/api.js';\nimport {\n    NavItemLink,\n  FilmWrapper,\n  StyledList,\n  ListItem,\n  FilmImg,\n  FilmTitle,\n  FilmDescr,\n  GoBackLink,\n  FilmSubTitle,\n    StyledListDescr,\n  NavLinkItem,\n} from './MoviesDetails.styled.js';\n\nconst defaultImg = '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>'\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      try {\n        const movieById = await getMovieById(movieId);\n        setMovie(movieById);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackLink>\n        <NavItemLink to={backLinkHref}>\n          Go back<span>.</span>\n        </NavItemLink>\n      </GoBackLink>\n      <FilmWrapper>\n        <FilmImg src={  \n          movie.poster_path ?\n          `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n          : defaultImg\n        }\n        width={250}\n        alt=\"poster\"\n        />\n        <div>\n          <FilmTitle>{movie.original_title}</FilmTitle>\n          <FilmSubTitle>Rating: {Math.round(movie.vote_average)}</FilmSubTitle>\n          <FilmSubTitle>Overview</FilmSubTitle>\n          <FilmDescr>{movie.overview}</FilmDescr>\n          <FilmSubTitle>Genres</FilmSubTitle>\n          <StyledListDescr>\n            {movie.genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </StyledListDescr>\n        </div>\n      </FilmWrapper>\n      <div>\n        <h2>Additional information</h2>\n        <StyledList>\n          <ListItem>\n            <NavLinkItem to=\"cast\" state={location.state}>\n              Cast\n            </NavLinkItem>\n          </ListItem>\n          <ListItem>\n            <NavLinkItem to=\"reviews\" state={location.state}>\n              Reviews\n            </NavLinkItem>\n          </ListItem>\n        </StyledList>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetails;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c609255ffcb20c3303eb6de86439bdeb';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};"],"names":["NavItemLink","styled","Link","NavLinkItem","NavLink","GoBackLink","FilmWrapper","FilmImg","FilmTitle","FilmSubTitle","FilmDescr","StyledListDescr","StyledList","ListItem","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","fetchMovieById","getMovieById","movieById","console","log","to","src","poster_path","width","alt","original_title","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}